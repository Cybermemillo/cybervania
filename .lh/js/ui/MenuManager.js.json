{
    "sourceFile": "js/ui/MenuManager.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1741034911447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741034980640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -238,5 +238,26 @@\n                 }\r\n                 @keyframes mist-disappear {\r\n                     0% { opacity: 1; }\r\n                     100% { opacity: 0; }\r\n-                \n\\ No newline at end of file\n+                }\r\n+            `;\r\n+            document.head.appendChild(style);\r\n+        }\r\n+        \r\n+        // Desvanecer la pantalla actual\r\n+        screen.style.opacity = '0';\r\n+        screen.style.transform = 'translateY(10px)';\r\n+        screen.style.transition = 'opacity 0.5s, transform 0.5s';\r\n+        \r\n+        // Ejecutar callback después de la animación\r\n+        setTimeout(() => {\r\n+            if (callback) callback();\r\n+            \r\n+            // Desvanecer la niebla\r\n+            mist.style.animation = 'mist-disappear 0.5s forwards';\r\n+            \r\n+            // Limpiar\r\n+            setTimeout(() => {\r\n+                mist.remove();\r\n+            }, 500);\r\n+        }, 500);\n\\ No newline at end of file\n"
                },
                {
                    "date": 1741034996432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -341,5 +341,7 @@\n                 height: 24px;\r\n                 background-image: url('../assets/images/ui/heart.png');\r\n                 background-size: contain;\r\n                 background-repeat: no-repeat;\r\n-                filter: drop-shadow(0 0 2px var(--gothic-blood));\n\\ No newline at end of file\n+                filter: drop-shadow(0 0 2px var(--gothic-blood));\r\n+            `;\r\n+            \n\\ No newline at end of file\n"
                },
                {
                    "date": 1741035011066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,5 +430,6 @@\n                 });\r\n                 \r\n                 if (btnOpt.onClick) {\r\n                     btn.addEventListener('click', () => btnOpt.onClick(parchment));\r\n-                }\n\\ No newline at end of file\n+                }\r\n+                \n\\ No newline at end of file\n"
                }
            ],
            "date": 1741034911447,
            "name": "Commit-0",
            "content": "/**\r\n * Gestor de menús con tema gótico para Cybervania\r\n */\r\nexport class MenuManager {\r\n    constructor() {\r\n        // Referencias a los elementos principales\r\n        this.menuContainer = document.getElementById('menu-container');\r\n        this.activeScreen = null;\r\n        \r\n        // Sonidos específicos góticos\r\n        this.sounds = {\r\n            hover: 'menu_hover_gothic',\r\n            select: 'bone_crack',\r\n            back: 'ghostly_whisper'\r\n        };\r\n        \r\n        // Inicializar los efectos góticos para menús\r\n        this.applyGothicStyles();\r\n    }\r\n    \r\n    /**\r\n     * Aplica estilos góticos adicionales a los elementos del menú\r\n     */\r\n    applyGothicStyles() {\r\n        // Añadir decoraciones góticas a los títulos\r\n        document.querySelectorAll('.menu-screen h3').forEach(title => {\r\n            // Agregar elementos decorativos a los lados del título\r\n            const leftDecoration = document.createElement('span');\r\n            leftDecoration.className = 'gothic-decoration left';\r\n            leftDecoration.innerHTML = '† ';\r\n            \r\n            const rightDecoration = document.createElement('span');\r\n            rightDecoration.className = 'gothic-decoration right';\r\n            rightDecoration.innerHTML = ' †';\r\n            \r\n            // Insertar antes y después del contenido\r\n            title.innerHTML = leftDecoration.outerHTML + title.innerHTML + rightDecoration.outerHTML;\r\n        });\r\n        \r\n        // Estilizar las tarjetas de especialización\r\n        document.querySelectorAll('.spec-card').forEach(card => {\r\n            // Agregar un fondo sangriento a las tarjetas\r\n            card.style.backgroundImage = \"url('../assets/images/decorations/blood_parchment.png')\";\r\n            card.style.backgroundSize = 'cover';\r\n            \r\n            // También como fallback si la imagen no carga\r\n            card.style.background = `\r\n                linear-gradient(to bottom, \r\n                    rgba(26, 5, 5, 0.8) 0%,\r\n                    rgba(50, 10, 10, 0.6) 100%\r\n                )\r\n            `;\r\n        });\r\n        \r\n        // Añadir efectos a los botones\r\n        document.querySelectorAll('button').forEach(button => {\r\n            button.addEventListener('mouseover', this.createBloodRipple.bind(this));\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Crea un efecto de ondulación sangriento en hover\r\n     */\r\n    createBloodRipple(event) {\r\n        const target = event.currentTarget;\r\n        const ripple = document.createElement('span');\r\n        \r\n        ripple.className = 'blood-ripple';\r\n        \r\n        // Posicionar el ripple donde está el cursor\r\n        const rect = target.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        \r\n        ripple.style.cssText = `\r\n            position: absolute;\r\n            left: ${x}px;\r\n            top: ${y}px;\r\n            width: 10px;\r\n            height: 10px;\r\n            background-color: rgba(128, 14, 14, 0.7);\r\n            border-radius: 50%;\r\n            transform: translate(-50%, -50%) scale(0);\r\n            animation: blood-ripple 0.6s ease-out;\r\n            pointer-events: none;\r\n        `;\r\n        \r\n        // Establecer overflow hidden si no lo tiene\r\n        if (getComputedStyle(target).position === 'static') {\r\n            target.style.position = 'relative';\r\n        }\r\n        target.style.overflow = 'hidden';\r\n        \r\n        // Agregar y luego remover el ripple\r\n        target.appendChild(ripple);\r\n        \r\n        setTimeout(() => {\r\n            ripple.remove();\r\n        }, 600);\r\n        \r\n        // Añadir estilos de animación si no existen\r\n        if (!document.querySelector('#blood-ripple-style')) {\r\n            const style = document.createElement('style');\r\n            style.id = 'blood-ripple-style';\r\n            style.textContent = `\r\n                @keyframes blood-ripple {\r\n                    to {\r\n                        transform: translate(-50%, -50%) scale(15);\r\n                        opacity: 0;\r\n                    }\r\n                }\r\n            `;\r\n            document.head.appendChild(style);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Muestra una pantalla específica con una transición gótica\r\n     */\r\n    showScreen(screenId, transition = 'fade') {\r\n        // Ocultar pantalla actual si existe\r\n        if (this.activeScreen) {\r\n            this.transitionOut(this.activeScreen, () => {\r\n                this.activeScreen.style.display = 'none';\r\n                this.activeScreen.classList.remove('active');\r\n                \r\n                // Mostrar nueva pantalla\r\n                const newScreen = document.getElementById(screenId);\r\n                if (newScreen) {\r\n                    this.transitionIn(newScreen);\r\n                    this.activeScreen = newScreen;\r\n                }\r\n            });\r\n        } else {\r\n            // No hay pantalla activa, mostrar la nueva directamente\r\n            const newScreen = document.getElementById(screenId);\r\n            if (newScreen) {\r\n                this.transitionIn(newScreen);\r\n                this.activeScreen = newScreen;\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Transición gótica de entrada para una pantalla\r\n     */\r\n    transitionIn(screen) {\r\n        // Hacer visible pero con opacity 0\r\n        screen.style.display = 'block';\r\n        screen.style.opacity = '0';\r\n        \r\n        // Efecto de sangre cayendo por la pantalla\r\n        const blood = document.createElement('div');\r\n        blood.className = 'blood-curtain';\r\n        blood.style.cssText = `\r\n            position: fixed;\r\n            top: -100%;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 200%;\r\n            background: linear-gradient(to bottom, \r\n                rgba(128, 14, 14, 0.8) 0%,\r\n                rgba(87, 7, 7, 0.6) 50%,\r\n                rgba(26, 5, 5, 0.1) 100%\r\n            );\r\n            z-index: 1000;\r\n            animation: blood-fall 1s forwards;\r\n            pointer-events: none;\r\n        `;\r\n        \r\n        document.body.appendChild(blood);\r\n        \r\n        // Añadir keyframe para la animación si no existe\r\n        if (!document.querySelector('#blood-fall-style')) {\r\n            const style = document.createElement('style');\r\n            style.id = 'blood-fall-style';\r\n            style.textContent = `\r\n                @keyframes blood-fall {\r\n                    0% { top: -100%; }\r\n                    100% { top: 0; }\r\n                }\r\n                @keyframes blood-fade {\r\n                    0% { opacity: 1; }\r\n                    100% { opacity: 0; }\r\n                }\r\n            `;\r\n            document.head.appendChild(style);\r\n        }\r\n        \r\n        // Después de la caída de sangre, mostrar la pantalla\r\n        setTimeout(() => {\r\n            screen.style.opacity = '1';\r\n            screen.classList.add('active');\r\n            \r\n            // Y hacer desaparecer la sangre\r\n            blood.style.animation = 'blood-fade 0.5s forwards';\r\n            \r\n            setTimeout(() => {\r\n                blood.remove();\r\n            }, 500);\r\n        }, 800);\r\n    }\r\n    \r\n    /**\r\n     * Transición gótica de salida para una pantalla\r\n     */\r\n    transitionOut(screen, callback) {\r\n        // Desvanecimiento con ondas de niebla fantasmal\r\n        const mist = document.createElement('div');\r\n        mist.className = 'ghost-mist';\r\n        mist.style.cssText = `\r\n            position: fixed;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: radial-gradient(\r\n                ellipse at center,\r\n                rgba(29, 13, 26, 0) 0%,\r\n                rgba(29, 13, 26, 0.8) 100%\r\n            );\r\n            z-index: 999;\r\n            opacity: 0;\r\n            animation: mist-appear 0.5s forwards;\r\n            pointer-events: none;\r\n        `;\r\n        \r\n        document.body.appendChild(mist);\r\n        \r\n        // Añadir keyframe para la animación si no existe\r\n        if (!document.querySelector('#ghost-mist-style')) {\r\n            const style = document.createElement('style');\r\n            style.id = 'ghost-mist-style';\r\n            style.textContent = `\r\n                @keyframes mist-appear {\r\n                    0% { opacity: 0; }\r\n                    100% { opacity: 1; }\r\n                }\r\n                @keyframes mist-disappear {\r\n                    0% { opacity: 1; }\r\n                    100% { opacity: 0; }\r\n                "
        }
    ]
}