{
    "sourceFile": "js/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1741029777001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741032175093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,32 @@\n import { GothicEffects } from './ui/GothicEffects.js';\r\n import { MenuEffects } from './ui/MenuEffects.js';\r\n import { getAudioManager } from './audio/AudioManager.js';\r\n import { Player } from './entities/Player.js';\r\n+import { getLocalization } from './i18n/Localization.js';\r\n \r\n // Inicializar sistemas cuando el DOM est칠 listo\r\n document.addEventListener('DOMContentLoaded', function() {\r\n     console.log('游붆 Cybervania - Inicializando men칰 principal...');\r\n     \r\n+    // Cargar opciones guardadas para determinar el idioma inicial\r\n+    let savedLanguage = 'es'; // Idioma por defecto\r\n+    try {\r\n+        const savedOptions = localStorage.getItem('cybervania_options');\r\n+        if (savedOptions) {\r\n+            const options = JSON.parse(savedOptions);\r\n+            if (options.language) {\r\n+                savedLanguage = options.language;\r\n+            }\r\n+        }\r\n+    } catch (e) {\r\n+        console.error('Error al cargar opciones de idioma:', e);\r\n+    }\r\n+    \r\n+    // Inicializar el sistema de localizaci칩n con el idioma guardado\r\n+    const localization = getLocalization();\r\n+    localization.setLanguage(savedLanguage);\r\n+    \r\n     // Inicializar el men칰 principal\r\n     const mainMenu = new MainMenu('menu-container');\r\n     \r\n     // Inicializar audio y precargar sonidos comunes\r\n@@ -18,11 +37,27 @@\n     // Para activar el audio en navegadores modernos que requieren interacci칩n del usuario\r\n     document.body.addEventListener('click', () => {\r\n         if (audioManager.isReady()) {\r\n             audioManager.resume();\r\n+            // Ocultar indicador de audio si est치 visible\r\n+            const audioIndicator = document.getElementById('audio-indicator');\r\n+            if (audioIndicator) {\r\n+                audioIndicator.style.opacity = '0';\r\n+                setTimeout(() => audioIndicator.remove(), 500);\r\n+            }\r\n         }\r\n     }, { once: true });\r\n     \r\n+    // Mostrar indicador de audio durante 3 segundos\r\n+    const audioIndicator = document.getElementById('audio-indicator');\r\n+    if (audioIndicator) {\r\n+        audioIndicator.style.opacity = '1';\r\n+        setTimeout(() => {\r\n+            audioIndicator.style.opacity = '0';\r\n+            setTimeout(() => audioIndicator.remove(), 500);\r\n+        }, 3000);\r\n+    }\r\n+    \r\n     // Inicializar efectos visuales\r\n     const menuEffects = new MenuEffects('menu-container');\r\n     const gothicEffects = new GothicEffects('menu-container');\r\n     \r\n@@ -37,8 +72,9 @@\n         mainMenu,\r\n         menuEffects,\r\n         gothicEffects,\r\n         audioManager,\r\n+        localization,\r\n         \r\n         // Aplicar configuraci칩n\r\n         applySettings(options) {\r\n             // Audio\r\n@@ -68,13 +104,9 @@\n             }\r\n             \r\n             // Idioma\r\n             if (options.language !== undefined) {\r\n-                document.documentElement.setAttribute('lang', options.language);\r\n-                document.body.className = document.body.className\r\n-                    .replace(/lang-[a-z]{2}/g, '')\r\n-                    .trim();\r\n-                document.body.classList.add(`lang-${options.language}`);\r\n+                localization.setLanguage(options.language);\r\n             }\r\n             \r\n             console.log('Configuraci칩n aplicada:', options);\r\n         }\r\n@@ -98,5 +130,12 @@\n             const randomEffect = effects[Math.floor(Math.random() * effects.length)];\r\n             randomEffect();\r\n         }\r\n     }, 30000);\r\n+    \r\n+    // A침adir listener para tecla Escape para volver al men칰 principal\r\n+    document.addEventListener('keydown', (e) => {\r\n+        if (e.key === 'Escape' && mainMenu.currentScreen !== 'main') {\r\n+            mainMenu.showScreen('main');\r\n+        }\r\n+    });\r\n });\r\n"
                },
                {
                    "date": 1741033298499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,15 @@\n import { MainMenu } from './ui/MainMenu.js';\r\n import { GothicEffects } from './ui/GothicEffects.js';\r\n import { MenuEffects } from './ui/MenuEffects.js';\r\n+import { RetroEffects } from './ui/RetroEffects.js';\r\n import { getAudioManager } from './audio/AudioManager.js';\r\n import { Player } from './entities/Player.js';\r\n import { getLocalization } from './i18n/Localization.js';\r\n \r\n // Inicializar sistemas cuando el DOM est칠 listo\r\n document.addEventListener('DOMContentLoaded', function() {\r\n-    console.log('游붆 Cybervania - Inicializando men칰 principal...');\r\n+    console.log('游꿡 Cybervania - Inicializando men칰 principal con estilo retro...');\r\n     \r\n     // Cargar opciones guardadas para determinar el idioma inicial\r\n     let savedLanguage = 'es'; // Idioma por defecto\r\n     try {\r\n@@ -50,9 +51,8 @@\n     // Mostrar indicador de audio durante 3 segundos\r\n     const audioIndicator = document.getElementById('audio-indicator');\r\n     if (audioIndicator) {\r\n         audioIndicator.style.opacity = '1';\r\n-        setTimeout(() => {\r\n             audioIndicator.style.opacity = '0';\r\n             setTimeout(() => audioIndicator.remove(), 500);\r\n         }, 3000);\r\n     }\r\n"
                },
                {
                    "date": 1741033362964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,16 +51,18 @@\n     // Mostrar indicador de audio durante 3 segundos\r\n     const audioIndicator = document.getElementById('audio-indicator');\r\n     if (audioIndicator) {\r\n         audioIndicator.style.opacity = '1';\r\n+        setTimeout(() => {\r\n             audioIndicator.style.opacity = '0';\r\n             setTimeout(() => audioIndicator.remove(), 500);\r\n         }, 3000);\r\n     }\r\n     \r\n     // Inicializar efectos visuales\r\n     const menuEffects = new MenuEffects('menu-container');\r\n     const gothicEffects = new GothicEffects('menu-container');\r\n+    const retroEffects = new RetroEffects('menu-container');\r\n     \r\n     // A침adir vi침eta oscura\r\n     gothicEffects.addDarkVignette();\r\n     \r\n@@ -71,8 +73,9 @@\n     window.cybervaniaSettings = {\r\n         mainMenu,\r\n         menuEffects,\r\n         gothicEffects,\r\n+        retroEffects,\r\n         audioManager,\r\n         localization,\r\n         \r\n         // Aplicar configuraci칩n\r\n"
                },
                {
                    "date": 1741036406195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,23 @@\n     \r\n     // A침adir vi침eta oscura\r\n     gothicEffects.addDarkVignette();\r\n     \r\n-    // Aplicar efectos g칩ticos en t칤tulos\r\n-    gothicEffects.applyBloodyText('.menu-screen h3');\r\n+    // Crear un efecto aleatorio cada 30 segundos\r\n+    setInterval(() => {\r\n+        if (Math.random() > 0.3) { // 30% de probabilidad\r\n+            const effects = [\r\n+                () => gothicEffects.triggerLightning(),\r\n+                () => gothicEffects.flickerLights(),\r\n+                () => gothicEffects.pulseBackground(),\r\n+                () => menuEffects.simulateSignalInterference()\r\n+            ];\r\n+            \r\n+            // Seleccionar efecto aleatorio\r\n+            const randomEffect = effects[Math.floor(Math.random() * effects.length)];\r\n+            randomEffect();\r\n+        }\r\n+    }, 30000);\r\n     \r\n     // Agregar gestor global para la configuraci칩n\r\n     window.cybervaniaSettings = {\r\n         mainMenu,\r\n@@ -117,25 +130,8 @@\n     \r\n     // Aplicar opciones iniciales\r\n     window.cybervaniaSettings.applySettings(mainMenu.gameOptions);\r\n     \r\n-    // Crear un efecto aleatorio cada 30 segundos\r\n-    setInterval(() => {\r\n-        if (Math.random() > 0.3) { // 30% de probabilidad\r\n-            const effects = [\r\n-                () => gothicEffects.triggerLightning(),\r\n-                () => gothicEffects.flickerLights(),\r\n-                () => gothicEffects.pulseBackground(),\r\n-                () => menuEffects.simulateSignalInterference(),\r\n-                () => gothicEffects.addBloodSplatter()\r\n-            ];\r\n-            \r\n-            // Seleccionar efecto aleatorio\r\n-            const randomEffect = effects[Math.floor(Math.random() * effects.length)];\r\n-            randomEffect();\r\n-        }\r\n-    }, 30000);\r\n-    \r\n     // A침adir listener para tecla Escape para volver al men칰 principal\r\n     document.addEventListener('keydown', (e) => {\r\n         if (e.key === 'Escape' && mainMenu.currentScreen !== 'main') {\r\n             mainMenu.showScreen('main');\r\n"
                }
            ],
            "date": 1741029777001,
            "name": "Commit-0",
            "content": "import { MainMenu } from './ui/MainMenu.js';\r\nimport { GothicEffects } from './ui/GothicEffects.js';\r\nimport { MenuEffects } from './ui/MenuEffects.js';\r\nimport { getAudioManager } from './audio/AudioManager.js';\r\nimport { Player } from './entities/Player.js';\r\n\r\n// Inicializar sistemas cuando el DOM est칠 listo\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    console.log('游붆 Cybervania - Inicializando men칰 principal...');\r\n    \r\n    // Inicializar el men칰 principal\r\n    const mainMenu = new MainMenu('menu-container');\r\n    \r\n    // Inicializar audio y precargar sonidos comunes\r\n    const audioManager = getAudioManager();\r\n    audioManager.preloadCommonSounds();\r\n    \r\n    // Para activar el audio en navegadores modernos que requieren interacci칩n del usuario\r\n    document.body.addEventListener('click', () => {\r\n        if (audioManager.isReady()) {\r\n            audioManager.resume();\r\n        }\r\n    }, { once: true });\r\n    \r\n    // Inicializar efectos visuales\r\n    const menuEffects = new MenuEffects('menu-container');\r\n    const gothicEffects = new GothicEffects('menu-container');\r\n    \r\n    // A침adir vi침eta oscura\r\n    gothicEffects.addDarkVignette();\r\n    \r\n    // Aplicar efectos g칩ticos en t칤tulos\r\n    gothicEffects.applyBloodyText('.menu-screen h3');\r\n    \r\n    // Agregar gestor global para la configuraci칩n\r\n    window.cybervaniaSettings = {\r\n        mainMenu,\r\n        menuEffects,\r\n        gothicEffects,\r\n        audioManager,\r\n        \r\n        // Aplicar configuraci칩n\r\n        applySettings(options) {\r\n            // Audio\r\n            if (options.musicVolume !== undefined) {\r\n                audioManager.setMusicVolume(options.musicVolume);\r\n            }\r\n            if (options.sfxVolume !== undefined) {\r\n                audioManager.setSFXVolume(options.sfxVolume);\r\n            }\r\n            \r\n            // Efectos visuales\r\n            if (options.visualQuality !== undefined) {\r\n                menuEffects.updateMistEffects(options.visualQuality);\r\n                const effectIntensity = options.visualQuality === 'low' ? 0.3 : \r\n                                        options.visualQuality === 'medium' ? 0.6 : 1.0;\r\n                menuEffects.updateEffectsIntensity(effectIntensity);\r\n            }\r\n            \r\n            // FPS objetivo\r\n            if (options.targetFPS !== undefined) {\r\n                menuEffects.setTargetFPS(options.targetFPS);\r\n            }\r\n            \r\n            // Alto contraste\r\n            if (options.highContrast !== undefined) {\r\n                menuEffects.toggleHighContrast(options.highContrast);\r\n            }\r\n            \r\n            // Idioma\r\n            if (options.language !== undefined) {\r\n                document.documentElement.setAttribute('lang', options.language);\r\n                document.body.className = document.body.className\r\n                    .replace(/lang-[a-z]{2}/g, '')\r\n                    .trim();\r\n                document.body.classList.add(`lang-${options.language}`);\r\n            }\r\n            \r\n            console.log('Configuraci칩n aplicada:', options);\r\n        }\r\n    };\r\n    \r\n    // Aplicar opciones iniciales\r\n    window.cybervaniaSettings.applySettings(mainMenu.gameOptions);\r\n    \r\n    // Crear un efecto aleatorio cada 30 segundos\r\n    setInterval(() => {\r\n        if (Math.random() > 0.3) { // 30% de probabilidad\r\n            const effects = [\r\n                () => gothicEffects.triggerLightning(),\r\n                () => gothicEffects.flickerLights(),\r\n                () => gothicEffects.pulseBackground(),\r\n                () => menuEffects.simulateSignalInterference(),\r\n                () => gothicEffects.addBloodSplatter()\r\n            ];\r\n            \r\n            // Seleccionar efecto aleatorio\r\n            const randomEffect = effects[Math.floor(Math.random() * effects.length)];\r\n            randomEffect();\r\n        }\r\n    }, 30000);\r\n});\r\n"
        }
    ]
}